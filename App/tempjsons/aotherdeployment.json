{
    "apiVersion": "v1",
    "items": [{
        "apiVersion": "extensions/v1beta1",
        "kind": "Deployment",
        "metadata": {
            "annotations": {
                "deployment.kubernetes.io/revision": "1"
            },
            "creationTimestamp": "2020-06-08T05:18:18Z",
            "generation": 1,
            "labels": {
                "app": "tensorflow-notebook",
                "chart": "tensorflow-notebook-0.1.3",
                "heritage": "Helm",
                "release": "notebook"
            },
            "name": "notebook-tensorflow-notebook",
            "namespace": "default",
            "resourceVersion": "12656639",
            "selfLink": "/apis/extensions/v1beta1/namespaces/default/deployments/notebook-tensorflow-notebook",
            "uid": "de38506d-5037-4f4e-8c25-ba3af5bcbc73"
        },
        "spec": {
            "progressDeadlineSeconds": 600,
            "replicas": 1,
            "revisionHistoryLimit": 10,
            "selector": {
                "matchLabels": {
                    "app": "tensorflow-notebook",
                    "release": "notebook"
                }
            },
            "strategy": {
                "rollingUpdate": {
                    "maxSurge": "25%",
                    "maxUnavailable": "25%"
                },
                "type": "RollingUpdate"
            },
            "template": {
                "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                        "app": "tensorflow-notebook",
                        "release": "notebook"
                    }
                },
                "spec": {
                    "containers": [{
                            "args": [
                                "notebook",
                                "--allow-root"
                            ],
                            "command": [
                                "jupyter"
                            ],
                            "env": [{
                                "name": "PASSWORD",
                                "valueFrom": {
                                    "secretKeyRef": {
                                        "key": "password",
                                        "name": "notebook-tensorflow-notebook"
                                    }
                                }
                            }],
                            "image": "tensorflow/tensorflow:1.6.0-devel",
                            "imagePullPolicy": "IfNotPresent",
                            "livenessProbe": {
                                "failureThreshold": 3,
                                "httpGet": {
                                    "path": "/",
                                    "port": 8888,
                                    "scheme": "HTTP"
                                },
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "timeoutSeconds": 1
                            },
                            "name": "jupyter",
                            "ports": [{
                                "containerPort": 8888,
                                "name": "jupyter",
                                "protocol": "TCP"
                            }],
                            "readinessProbe": {
                                "failureThreshold": 3,
                                "httpGet": {
                                    "path": "/",
                                    "port": 8888,
                                    "scheme": "HTTP"
                                },
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "timeoutSeconds": 1
                            },
                            "resources": {},
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "volumeMounts": [{
                                "mountPath": "/output/training_logs",
                                "name": "training-logs-volume"
                            }]
                        },
                        {
                            "args": [
                                "--logdir",
                                "/output/training_logs",
                                "--host",
                                "0.0.0.0"
                            ],
                            "command": [
                                "tensorboard"
                            ],
                            "image": "tensorflow/tensorflow:1.6.0-devel",
                            "imagePullPolicy": "IfNotPresent",
                            "livenessProbe": {
                                "failureThreshold": 3,
                                "httpGet": {
                                    "path": "/",
                                    "port": 6006,
                                    "scheme": "HTTP"
                                },
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "timeoutSeconds": 1
                            },
                            "name": "tensorboard",
                            "ports": [{
                                "containerPort": 6006,
                                "name": "tensorboard",
                                "protocol": "TCP"
                            }],
                            "readinessProbe": {
                                "failureThreshold": 3,
                                "httpGet": {
                                    "path": "/",
                                    "port": 6006,
                                    "scheme": "HTTP"
                                },
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "timeoutSeconds": 1
                            },
                            "resources": {},
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "volumeMounts": [{
                                "mountPath": "/output/training_logs",
                                "name": "training-logs-volume"
                            }]
                        }
                    ],
                    "dnsPolicy": "ClusterFirst",
                    "restartPolicy": "Always",
                    "schedulerName": "default-scheduler",
                    "securityContext": {},
                    "terminationGracePeriodSeconds": 30,
                    "volumes": [{
                        "emptyDir": {},
                        "name": "training-logs-volume"
                    }]
                }
            }
        },
        "status": {
            "availableReplicas": 1,
            "conditions": [{
                    "lastTransitionTime": "2020-06-08T05:18:18Z",
                    "lastUpdateTime": "2020-06-08T05:21:31Z",
                    "message": "ReplicaSet \"notebook-tensorflow-notebook-6768586678\" has successfully progressed.",
                    "reason": "NewReplicaSetAvailable",
                    "status": "True",
                    "type": "Progressing"
                },
                {
                    "lastTransitionTime": "2020-08-02T23:27:15Z",
                    "lastUpdateTime": "2020-08-02T23:27:15Z",
                    "message": "Deployment has minimum availability.",
                    "reason": "MinimumReplicasAvailable",
                    "status": "True",
                    "type": "Available"
                }
            ],
            "observedGeneration": 1,
            "readyReplicas": 1,
            "replicas": 1,
            "updatedReplicas": 1
        }
    }],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}